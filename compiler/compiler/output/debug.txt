
Lexer::Lexer(input/test.txt)
    words: 1035
    end word: -1
Lexer::next(): [#...]
Lexer::next(): [\n]
Lexer::next(): [#...]
Lexer::next(): [\n]
Lexer::next(): [\n]
Lexer::next(): [/**/]
Lexer::next(): [\n]
Lexer::next(): [\n]
Lexer::next(): [#...]
Lexer::next(): [\n]
Lexer::next(): [\n]
SymbolTable::has(namespace)
Lexer::next(): [id] namespace [add]
SymbolTable::addToken(ID, namespace, -677088073)
Lexer::next(): [WS]
SymbolTable::has(kkli)
Lexer::next(): [id] kkli [add]
SymbolTable::addToken(ID, kkli, 342216105)
Lexer::next(): [WS]
Lexer::next(): [LBRACE]
Lexer::next(): [\n]
Lexer::next(): [\n]
Lexer::next(): [WS]
Lexer::next(): [//]
Lexer::next(): [\n]
Lexer::next(): [WS]
Lexer::next(): [//]
Lexer::next(): [\n]
Lexer::next(): [WS]
Lexer::next(): [//]
Lexer::next(): [\n]
Lexer::next(): [WS]
SymbolTable::has(class)
Lexer::next(): [id] class [add]
SymbolTable::addToken(ID, class, -671523460)
Lexer::next(): [WS]
SymbolTable::has(Error)
Lexer::next(): [id] Error [add]
SymbolTable::addToken(ID, Error, -1775662100)
Lexer::next(): [WS]
Lexer::next(): [LBRACE]
Lexer::next(): [\n]
Lexer::next(): [WS]
SymbolTable::has(private)
Lexer::next(): [id] private [add]
SymbolTable::addToken(ID, private, 2008496923)
Lexer::next(): [COLON]
Lexer::next(): [\n]
Lexer::next(): [WS]
Lexer::next(): [WS]
SymbolTable::has(std)
Lexer::next(): [id] std [add]
SymbolTable::addToken(ID, std, 2502187)
Lexer::next(): [COLON]
Lexer::next(): [COLON]
SymbolTable::has(string)
Lexer::next(): [id] string [add]
SymbolTable::addToken(ID, string, -1683152555)
Lexer::next(): [WS]
SymbolTable::has(info)
Lexer::next(): [id] info [add]
SymbolTable::addToken(ID, info, 335927010)
Lexer::next(): [SEMICON]
Lexer::next(): [\n]
Lexer::next(): [WS]
SymbolTable::has(public)
Lexer::next(): [id] public [add]
SymbolTable::addToken(ID, public, -1032990267)
Lexer::next(): [COLON]
Lexer::next(): [\n]
Lexer::next(): [WS]
Lexer::next(): [WS]
SymbolTable::has(Error)
Lexer::next(): [id] Error [add]
SymbolTable::addToken(ID, Error, -1775662100)
Lexer::next(): [LPAREN]
SymbolTable::has(std)
Lexer::next(): [id] std [add]
SymbolTable::addToken(ID, std, 2502187)
Lexer::next(): [COLON]
Lexer::next(): [COLON]
SymbolTable::has(string)
Lexer::next(): [id] string [add]
SymbolTable::addToken(ID, string, -1683152555)
Lexer::next(): [WS]
SymbolTable::has(i)
Lexer::next(): [id] i [add]
SymbolTable::addToken(ID, i, 105)
Lexer::next(): [RPAREN]
Lexer::next(): [WS]
Lexer::next(): [COLON]
Lexer::next(): [WS]
SymbolTable::has(info)
Lexer::next(): [id] info [add]
SymbolTable::addToken(ID, info, 335927010)
Lexer::next(): [LPAREN]
SymbolTable::has(i)
Lexer::next(): [id] i [add]
SymbolTable::addToken(ID, i, 105)
Lexer::next(): [RPAREN]
Lexer::next(): [WS]
Lexer::next(): [LBRACE]
Lexer::next(): [RBRACE]
Lexer::next(): [\n]
Lexer::next(): [WS]
Lexer::next(): [WS]
SymbolTable::has(std)
Lexer::next(): [id] std [add]
SymbolTable::addToken(ID, std, 2502187)
Lexer::next(): [COLON]
Lexer::next(): [COLON]
SymbolTable::has(string)
Lexer::next(): [id] string [add]
SymbolTable::addToken(ID, string, -1683152555)
Lexer::next(): [WS]
SymbolTable::has(what)
Lexer::next(): [id] what [add]
SymbolTable::addToken(ID, what, 380267948)
Lexer::next(): [LPAREN]
Lexer::next(): [RPAREN]
SymbolTable::has(const)
Lexer::next(): [id] const [add]
SymbolTable::addToken(ID, const, -661712973)
Lexer::next(): [WS]
Lexer::next(): [LBRACE]
Lexer::next(): [WS]
SymbolTable::has(return)
Lexer::next(): [id] return [add]
SymbolTable::addToken(ID, return, -12847000)
Lexer::next(): [WS]
Lexer::next(): [string]
Lexer::next(): [WS]
Lexer::next(): [ADD]
Lexer::next(): [WS]
SymbolTable::has(info)
Lexer::next(): [id] info [add]
SymbolTable::addToken(ID, info, 335927010)
Lexer::next(): [SEMICON]
Lexer::next(): [WS]
Lexer::next(): [RBRACE]
Lexer::next(): [\n]
Lexer::next(): [WS]
Lexer::next(): [RBRACE]
Lexer::next(): [SEMICON]
Lexer::next(): [\n]
Lexer::next(): [\n]
Lexer::next(): [WS]
Lexer::next(): [//]
Lexer::next(): [\n]
Lexer::next(): [WS]
Lexer::next(): [//]
Lexer::next(): [\n]
Lexer::next(): [WS]
Lexer::next(): [//]
Lexer::next(): [\n]
Lexer::next(): [WS]
SymbolTable::has(class)
Lexer::next(): [id] class [add]
SymbolTable::addToken(ID, class, -671523460)
Lexer::next(): [WS]
SymbolTable::has(Debug)
Lexer::next(): [id] Debug [add]
SymbolTable::addToken(ID, Debug, 2010716643)
Lexer::next(): [WS]
Lexer::next(): [LBRACE]
Lexer::next(): [\n]
Lexer::next(): [WS]
SymbolTable::has(private)
Lexer::next(): [id] private [add]
SymbolTable::addToken(ID, private, 2008496923)
Lexer::next(): [COLON]
Lexer::next(): [\n]
Lexer::next(): [WS]
SymbolTable::has(public)
Lexer::next(): [id] public [add]
SymbolTable::addToken(ID, public, -1032990267)
Lexer::next(): [COLON]
